version: '3.8'

services:
  beyondfire-mongodb:
    image: mongo:6.0
    container_name: beyondfire-mongodb
    restart: unless-stopped
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGO_DATABASE}
    ports:
      - "27017:27017"
    volumes:
      - mongodb-data:/data/db
      - mongodb-config:/data/configdb
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    command: ["--auth", "--bind_ip_all"]
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping').ok", "--quiet", "--host", "localhost", "--port", "27017", "-u", "${MONGO_ROOT_USERNAME}", "-p", "${MONGO_ROOT_PASSWORD}", "--authenticationDatabase", "admin"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 60s
    networks:
      - beyondfire-network

  beyondfire-cloud-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: beyondfire-cloud-api
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - PORTAINER_URL=${PORTAINER_URL}
      - PORTAINER_USERNAME=${PORTAINER_USERNAME}
      - PORTAINER_PASSWORD=${PORTAINER_PASSWORD}
      # - CLOUDFLARE_API_TOKEN=${CLOUDFLARE_API_TOKEN}
      # - CLOUDFLARE_ZONE_ID=${CLOUDFLARE_ZONE_ID}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET}
      - SERVER_IP=${SERVER_IP}
      - MONGO_URI=mongodb://${MONGO_ROOT_USERNAME}:${MONGO_ROOT_PASSWORD}@beyondfire-mongodb:27017/${MONGO_DATABASE}?authSource=admin
      - MONGO_DATABASE=${MONGO_DATABASE}
      - RATE_LIMIT_WINDOW_MS=15000
      - RATE_LIMIT_MAX=100
      - TOKEN_EXPIRY=1h
      - REFRESH_TOKEN_EXPIRY=7d
    volumes:
      - beyondfire-logs:/app/logs
    depends_on:
      beyondfire-mongodb:
        condition: service_healthy
    networks:
      - beyondfire-network

  beyondfire-cloud-frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: beyondfire-cloud-frontend
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - beyondfire-cloud-api
    networks:
      - beyondfire-network

volumes:
  beyondfire-logs:
  mongodb-data:
  mongodb-config:

networks:
  beyondfire-network:
    driver: bridge
